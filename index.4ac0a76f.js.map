{"mappings":"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","sources":["src/components/Layer.ts","src/components/Background.ts","src/components/Control.ts","src/components/Sprite.ts","src/components/Particle.ts","src/components/Explosion/Explosion.ts","src/components/Explosion/SmokeExplosion.ts","src/components/Explosion/FIreExplosion.ts","src/components/Enemies/Enemy.ts","src/components/Enemies/Angler1.ts","src/components/Enemies/Angler2.ts","src/components/Enemies/Lucky.ts","src/components/Bullet.ts","src/components/Player.ts","src/components/UI.ts","src/components/Enemies/Drone.ts","src/components/Enemies/HiveWhale.ts","src/index.ts","src/components/Game.ts"],"sourcesContent":["import { Game } from './Game';\r\n\r\nexport class Layer {\r\n  game: Game;\r\n  image: any;\r\n  speedModifier: any;\r\n  height: number;\r\n  width = 1768;\r\n  x = 0;\r\n  y = 0;\r\n\r\n  constructor(game: Game, image: any, speedModifier: any) {\r\n    this.game = game;\r\n    this.image = image;\r\n    this.speedModifier = speedModifier;\r\n    this.height = this.game.height;\r\n  }\r\n\r\n  update() {\r\n    if (this.x <= -this.width) this.x = 0;\r\n    else this.x -= this.game.speed * this.speedModifier;\r\n  }\r\n\r\n  draw() {\r\n    this.game.ctx.drawImage(this.image, this.x, this.y);\r\n    this.game.ctx.drawImage(this.image, this.x + this.width, this.y);\r\n  }\r\n}\r\n","import { Game } from \"./Game\";\r\nimport { Layer } from \"./Layer\";\r\n\r\nexport class Background {\r\n    game: Game;\r\n    layers: Layer[] = [];\r\n    topLayers: Layer[] = [];\r\n\r\n    constructor(game: Game) {\r\n        this.game = game;\r\n        \r\n        const image1 = <HTMLImageElement>document.getElementById('layer1');\r\n        const image2 = <HTMLImageElement>document.getElementById('layer2');\r\n        const image3 = <HTMLImageElement>document.getElementById('layer3');\r\n        const image4 = <HTMLImageElement>document.getElementById('layer4');\r\n\r\n        this.layers = [\r\n            new Layer(this.game, image1, 0.2),\r\n            new Layer(this.game, image2, 0.4),\r\n            new Layer(this.game, image3, 1),\r\n        ];\r\n        this.topLayers = [\r\n            new Layer(this.game, image4, 1.5)\r\n        ]\r\n    }\r\n\r\n    update() {\r\n        this.layers.forEach(layer => layer.update());\r\n    }\r\n\r\n    postUpdate() {\r\n        this.topLayers.forEach(layer => layer.update());\r\n    }\r\n\r\n    draw() {\r\n        this.layers.forEach(layer => layer.draw());\r\n    }\r\n    \r\n    postDraw() {\r\n        this.topLayers.forEach(layer => layer.draw());\r\n    }\r\n}","import { Game } from \"./Game\";\r\n\r\nexport class Control {\r\n    game: Game;\r\n    private controlKeys = ['ArrowUp', 'ArrowDown'];\r\n    private shootKey = ' ';\r\n\r\n    constructor(game: Game) {\r\n        this.game = game;\r\n        window.addEventListener('keydown', e => {\r\n            if (this.controlKeys.includes(e.key) && !this.game.keys.includes(e.key)) {\r\n                this.game.keys.push(e.key);\r\n            } \r\n            if (this.shootKey === e.key) this.game.player.shoot();\r\n            if (e.key === 'd') this.game.debug = !this.game.debug;\r\n        });\r\n\r\n        window.addEventListener('keyup', e => {\r\n            const index = this.game.keys.indexOf(e.key);\r\n            if (index > -1) this.game.keys.splice(index, 1);\r\n        });\r\n    }\r\n}","import { Game } from \"./Game\";\r\n\r\nexport abstract class Sprite {\r\n    abstract image: HTMLImageElement;\r\n    abstract frameX: number;\r\n    abstract frameY: number;\r\n    abstract maxFrame: number;\r\n    abstract game: Game;\r\n    abstract x: number;\r\n    abstract y: number;\r\n    abstract width: number;\r\n    abstract height: number;\r\n\r\n    updateSprite() {\r\n        if (this.frameX < this.maxFrame) this.frameX++;\r\n        else this.frameX = 0;\r\n    }\r\n\r\n    draw() {\r\n        this.game.ctx.drawImage(\r\n            this.image, \r\n            this.frameX * this.width,\r\n            this.frameY * this.height,\r\n            this.width,\r\n            this.height,\r\n            this.x, \r\n            this.y, \r\n            this.width, \r\n            this.height\r\n        );\r\n        if (this.game.debug) {\r\n            this.game.ctx.strokeRect(this.x, this.y, this.width, this.height);\r\n            if ('lives' in this) {\r\n                this.game.ctx.fillStyle = 'black';\r\n                this.game.ctx.font = '20px Helvetica';\r\n                // @ts-ignore\r\n                this.game.ctx.fillText(this.lives.toString(), this.x, this.y);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Game } from './Game';\r\n\r\nexport class Particle {\r\n  x: number;\r\n  y: number;\r\n  game: Game;\r\n  image = <HTMLImageElement>document.getElementById('gears');\r\n  frameX = Math.floor(Math.random() * 3);\r\n  frameY = Math.floor(Math.random() * 3);\r\n  width = 50;\r\n  height = 50;\r\n  sizeModifier = parseFloat((Math.random() * 0.5 + 0.5).toFixed(1));\r\n  size = this.width * this.sizeModifier;\r\n  speedX = Math.random() * 6 - 3;\r\n  speedY = Math.random() * -15;\r\n  gravity = 0.5;\r\n  markedForDelete = false;\r\n  angle = 0;\r\n  angleVelocity = Math.random() * 0.2 - 0.1;\r\n  bounced = 2;\r\n  bottomBounceBorder = 80 * Math.random() + 60;\r\n\r\n  constructor(game: Game, x: number, y: number) {\r\n    this.game = game;\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  update() {\r\n    this.angle += this.angleVelocity;\r\n    this.speedY += this.gravity;\r\n    this.x -= this.speedX + this.game.speed;\r\n    this.y += this.speedY;\r\n    if (this.y > this.game.height + this.size || this.x < 0 - this.size)\r\n      this.markedForDelete = true;\r\n    if (this.y > this.game.height - this.bottomBounceBorder && this.bounced > 0) {\r\n      this.bounced--;\r\n      this.speedY *= -0.5;\r\n    }\r\n  }\r\n\r\n  draw() {\r\n    this.game.ctx.save();\r\n    this.game.ctx.translate(this.x, this.y);\r\n    this.game.ctx.rotate(this.angle);\r\n\r\n    this.game.ctx.drawImage(\r\n      this.image,\r\n      this.frameX * this.size,\r\n      this.frameY * this.size,\r\n      this.width,\r\n      this.height,\r\n      this.size * -0.5,\r\n      this.size * -0.5,\r\n      this.width,\r\n      this.height\r\n    );\r\n    this.game.ctx.restore();\r\n  }\r\n}\r\n","import { Game } from \"components/Game\";\r\nimport { Sprite } from \"../Sprite\";\r\n\r\nexport abstract class Explosion extends Sprite {\r\n    game: Game;\r\n    frameX = 0;\r\n    frameY = 0;\r\n    height = 200;\r\n    timer = 0;\r\n    fps = 30;\r\n    interval = 1000 / this.fps;\r\n    markedForDelete = false;\r\n    \r\n    abstract x: number;\r\n    abstract y: number;\r\n    abstract image: HTMLImageElement;\r\n    abstract maxFrame: number;\r\n\r\n    constructor(game: Game) {\r\n        super();\r\n        this.game = game;\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        this.x -= this.game.speed;\r\n        if (this.timer > this.interval) {\r\n            this.frameX++;\r\n            this.timer = 0;\r\n        } else this.timer += deltaTime;\r\n        if (this.frameX > this.maxFrame) this.markedForDelete = true\r\n    }\r\n}\r\n","import { Game } from \"components/Game\";\r\nimport { Explosion } from \"./Explosion\";\r\n\r\nexport class SmokeExplosion extends Explosion {\r\n    image = <HTMLImageElement>document.getElementById('smoke');\r\n    maxFrame = 8;\r\n    width = 200;\r\n    height = 200;\r\n    x: number;\r\n    y: number;\r\n\r\n    constructor(game: Game, x: number, y: number) {\r\n        super(game);\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}","import { Game } from \"components/Game\";\r\nimport { Explosion } from \"./Explosion\";\r\n\r\nexport class FireExplosion extends Explosion {\r\n    image = <HTMLImageElement>document.getElementById('fire');\r\n    maxFrame = 8;\r\n    width = 200;\r\n    height = 200;\r\n    x: number;\r\n    y: number;\r\n\r\n    constructor(game: Game, x: number, y: number) {\r\n        super(game);\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}","import { IDrawable } from \"components/types/Drawable\";\r\nimport { IUpdatable } from \"components/types/Updatable\";\r\nimport { Game } from \"../Game\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { Particle } from \"../Particle\";\r\nimport { SmokeExplosion } from \"../Explosion/SmokeExplosion\";\r\nimport { FireExplosion } from \"../Explosion/FIreExplosion\";\r\n\r\nexport abstract class Enemy extends Sprite implements IDrawable, IUpdatable {\r\n    game: Game;\r\n    markedForDelete = false;\r\n    speedX: number;\r\n    x: number;\r\n    frameX = 0;\r\n\r\n    abstract maxFrame: number;\r\n    abstract frameY: number;\r\n    abstract score: number;\r\n    abstract lives: number;\r\n    abstract y: number;\r\n    abstract width: number;\r\n    abstract height: number;\r\n    abstract image: HTMLImageElement;\r\n    abstract type: string;\r\n    \r\n    constructor(game: Game) {\r\n        super();\r\n        this.game = game;\r\n        this.x = game.width;\r\n        this.speedX = Math.random() * -1.5 - 0.5;\r\n    }\r\n\r\n    update() {\r\n        this.x += this.speedX - this.game.speed;\r\n        if (this.x + this.width < 0) this.markedForDelete = true;\r\n        this.updateSprite();\r\n    }\r\n\r\n    takeHit() {\r\n        this.game.particles.push(new Particle(this.game, this.x + this.width * 0.5, this.y + this.height * 0.5));\r\n    }\r\n    \r\n    kill() {\r\n        this.markedForDelete = true;\r\n        // @ts-ignore\r\n        const explosions = [FireExplosion, SmokeExplosion];\r\n        const index = Math.floor(Math.random() * explosions.length);\r\n        const RandomExplosion = explosions[index];\r\n        this.game.explosions.push((new RandomExplosion(this.game, this.x, this.y)));\r\n        for (let i = 0; i < this.score; i++) {\r\n            this.game.particles.push(new Particle(this.game, this.x + this.width * 0.5, this.y + this.height * 0.5))\r\n        }\r\n    }\r\n\r\n    touch() {\r\n        if (!this.game.gameOver) this.game.score -= this.score; \r\n        this.kill();\r\n    }\r\n}","import { Game } from \"components/Game\";\r\nimport { Enemy } from \"./Enemy\";\r\n\r\nexport class Angler1 extends Enemy {\r\n    y: number;\r\n    width = 228;\r\n    height = 169;\r\n    score = 2;\r\n    lives = 2;\r\n    image = <HTMLImageElement>document.getElementById('angler1');\r\n    frameY = Math.floor(Math.random() * 3);\r\n    maxFrame = 37;\r\n    type = 'angler1';\r\n\r\n    constructor(game: Game) {\r\n        super(game);\r\n        this.y = Math.random() * (game.height * 0.95- this.height);\r\n    }\r\n}\r\n","import { Game } from \"components/Game\";\r\nimport { Enemy } from \"./Enemy\";\r\n\r\nexport class Angler2 extends Enemy {\r\n    y: number;\r\n    width = 213;\r\n    height = 165;\r\n    score = 3;\r\n    lives = 3;\r\n    image = <HTMLImageElement>document.getElementById('angler2');\r\n    frameY = Math.floor(Math.random() * 2);\r\n    maxFrame = 37;\r\n    type = 'angler2';\r\n\r\n\r\n    constructor(game: Game) {\r\n        super(game);\r\n        this.y = Math.random() * (game.height * 0.95 - this.height);\r\n    }\r\n}\r\n","import { Game } from \"components/Game\";\r\nimport { Enemy } from \"./Enemy\";\r\n\r\nexport class Lucky extends Enemy {\r\n    y: number;\r\n    width = 99;\r\n    height = 95;\r\n    score = 0;\r\n    lives = 3;\r\n    image = <HTMLImageElement>document.getElementById('lucky');\r\n    frameY = Math.floor(Math.random() * 2);\r\n    maxFrame = 37;\r\n    type = 'lucky';\r\n\r\n    constructor(game: Game) {\r\n        super(game);\r\n        this.y = Math.random() * (game.height * 0.9 - this.height);\r\n    }\r\n\r\n    touch() {\r\n        this.game.player.onTurbo();\r\n        this.kill();\r\n    }\r\n}\r\n","import { Game } from \"./Game\";\r\n\r\nexport class Bullet {\r\n    game: Game;\r\n    x: number;\r\n    y: number;\r\n    width = 10;\r\n    height = 3;\r\n    speed = 3;\r\n    markForDelete = false;\r\n    image = <HTMLImageElement>document.getElementById('bullet');\r\n\r\n    constructor(game: Game, x: number, y: number) {\r\n        this.game = game;\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    update() {\r\n        this.x += this.speed;\r\n\r\n        if (this.width > this.game.width * 0.8) this.markForDelete = true; \r\n    }\r\n\r\n    draw() {\r\n        this.game.ctx.drawImage(this.image, this.x, this.y)\r\n    }\r\n}","import { Game } from \"./Game\";\r\nimport { Bullet } from \"./Bullet\";\r\nimport { IDrawable } from \"./types/Drawable\";\r\nimport { IUpdatable } from \"./types/Updatable\";\r\nimport { Sprite } from \"./Sprite\";\r\n\r\nexport class Player extends Sprite implements IDrawable {\r\n    game: Game;\r\n    width = 120;\r\n    height = 190;\r\n    x = 20;\r\n    y = 100;\r\n    frameX = 0;\r\n    frameY = 0;\r\n    maxFrame = 37;\r\n    speedY = 0;\r\n    maxSpeed = 3;\r\n    image = <HTMLImageElement>document.getElementById('player');\r\n    turbo = false;\r\n    turboTimer = 0;\r\n    turboLimit = 5000;\r\n\r\n    constructor(game: Game) {\r\n        super();\r\n        this.game = game;\r\n    } \r\n\r\n    update(deltaTime: number) {\r\n        if (this.game.keys.includes('ArrowUp')) this.speedY = -this.maxSpeed;\r\n        else if (this.game.keys.includes('ArrowDown')) this.speedY = this.maxSpeed;\r\n        else this.speedY = 0;\r\n        this.y += this.speedY;\r\n\r\n        const bottomBorder = this.game.height - this.height * 0.5;\r\n        const topBorder = -this.height * 0.5;\r\n        if (this.y > bottomBorder) this.y = bottomBorder; \r\n        else if (this.y < topBorder) this.y = topBorder; \r\n        \r\n        this.game.bullets.forEach(bullet => bullet.update());\r\n        this.game.bullets = this.game.bullets.filter(bullet => !bullet.markForDelete);\r\n        this.updateSprite();\r\n        if (this.turbo) {\r\n            if (this.turboTimer > this.turboLimit) {\r\n                this.turboTimer = 0;\r\n                this.turbo = false;\r\n                this.frameY = 0\r\n            } else {\r\n                this.turboTimer += deltaTime;\r\n                this.frameY = 1;\r\n                this.game.ammo += 0.1;\r\n            }\r\n        }\r\n    }\r\n\r\n    shoot() {\r\n        if (this.game.ammo > 0) {\r\n            this.game.bullets.push(new Bullet(this.game, this.x + 90, this.y + 33));\r\n            this.game.ammo--;\r\n        }\r\n        if (this.turbo) this.bottomShoot();\r\n    }\r\n\r\n    private bottomShoot() {\r\n        if (this.game.ammo > 0) {\r\n            this.game.bullets.push(new Bullet(this.game, this.x + 90, this.y + 175));\r\n            this.game.ammo--;\r\n        }\r\n    }\r\n\r\n    onTurbo() {\r\n        this.turbo = true;\r\n        this.turboTimer = 0;\r\n        if(this.game.ammo< this.game.maxAmmo) this.game.ammo = this.game.maxAmmo;\r\n    }\r\n}","import { Game } from \"./Game\";\r\nimport { IDrawable } from \"./types/Drawable\";\r\n\r\nexport class UI implements IDrawable {\r\n    game: Game;\r\n    fontSize = 25;\r\n    fontFamily = 'Bangers';\r\n    color = 'yellow';\r\n\r\n    constructor(game: Game) {\r\n        this.game = game;\r\n    }\r\n\r\n    draw() {\r\n        const ctx = this.game.ctx;\r\n        ctx.save();\r\n        ctx.font = this.fontSize + 'px ' + this.fontFamily;\r\n        ctx.fillStyle = 'white';\r\n        ctx.shadowOffsetX = 2;\r\n        ctx.shadowOffsetY = 2;\r\n        ctx.shadowColor = 'black';\r\n        ctx.fillText('Score: ' + this.game.score, 20, 40);\r\n\r\n        ctx.fillStyle = this.game.player.turbo ? this.color : 'white';\r\n        for(let i = 0; i < this.game.ammo; i++) {\r\n            ctx.fillRect(20 + 5 * i, 50, 3, 20);\r\n        }\r\n\r\n        ctx.fillStyle = 'white';\r\n        const formattedTime = (this.game.gameTime * 0.001).toFixed(1);\r\n        ctx.fillText('Time left: ' + formattedTime, 20, 100);\r\n\r\n        if (this.game.gameOver) {\r\n            ctx.textAlign = 'center';\r\n            let title = 'You Lost!';\r\n            let subtitle = 'Try Again Next Time!';\r\n            \r\n            if (this.game.winningScore < this.game.score) {\r\n                title = 'You Win!'\r\n                subtitle = 'Well Done!'\r\n            }\r\n\r\n            ctx.fillStyle = 'white';\r\n            ctx.font = '58px ' + this.fontFamily;\r\n            ctx.fillText(title, this.game.width * 0.5, this.game.height * 0.5 - 30);\r\n            ctx.font = '25px ' + this.fontFamily;\r\n            ctx.fillText(subtitle, this.game.width * 0.5, this.game.height * 0.5 + 30);\r\n        }\r\n        ctx.restore();\r\n    }\r\n}","import { Game } from \"components/Game\";\r\nimport { Enemy } from \"./Enemy\";\r\n\r\nexport class Drone extends Enemy {\r\n    y: number;\r\n    width = 115;\r\n    height = 95;\r\n    score = 3;\r\n    lives = 3;\r\n    image = <HTMLImageElement>document.getElementById('drone');\r\n    frameY = Math.floor(Math.random() * 2);\r\n    maxFrame = 39;\r\n    type = 'drone';\r\n    speedX = Math.random() * -4.2 - 0.5;\r\n\r\n    constructor(game: Game, x: number, y: number) {\r\n        super(game);\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}\r\n","import { Game } from \"components/Game\";\r\nimport { Particle } from \"../Particle\";\r\nimport { Drone } from \"./Drone\";\r\nimport { Enemy } from \"./Enemy\";\r\n\r\nexport class HiveWhale extends Enemy {\r\n    y: number;\r\n    width = 400;\r\n    height = 227;\r\n    score = 15;\r\n    lives = 15;\r\n    image = <HTMLImageElement>document.getElementById('hivewhale');\r\n    frameY = 0;\r\n    maxFrame = 37;\r\n    type = 'hive';\r\n    speedX = Math.random() * -1.2 - 0.2;\r\n\r\n    constructor(game: Game) {\r\n        super(game);\r\n        this.y = Math.random() * (game.height * 0.95 - this.height);\r\n    }\r\n\r\n    kill() {\r\n        this.markedForDelete = true;\r\n        for (let i = 0; i < this.score; i++) {\r\n            this.game.particles.push(new Particle(this.game, this.x + this.width * 0.5, this.y + this.height * 0.5))\r\n        }\r\n        for (let i = 0; i < 5; i++) {\r\n            const drone = new Drone(this.game, this.x + Math.random() * this.width, this.y + Math.random() * this.height * 0.5);\r\n            this.game.enemies.push(drone);\r\n        }\r\n    }\r\n}\r\n","import { Game } from \"./components/Game\";\r\n\r\nconst game = new Game();\r\n\r\nlet lastUpdateTime = 0;\r\n\r\nfunction animate(timeStamp: number) {\r\n    const deltaTime = timeStamp - lastUpdateTime;\r\n    lastUpdateTime = timeStamp;\r\n    game.update(deltaTime);\r\n    game.draw();\r\n    requestAnimationFrame(animate);\r\n}\r\nanimate(0);","import { Background } from './Background';\r\nimport { Control } from './Control';\r\nimport { Angler1 } from './Enemies/Angler1';\r\nimport { Angler2 } from './Enemies/Angler2';\r\nimport { Drone } from './Enemies/Drone';\r\nimport { Enemy } from './Enemies/Enemy';\r\nimport { Lucky } from './Enemies/Lucky';\r\nimport { Player } from './Player';\r\nimport { Particle } from './Particle';\r\nimport { IDrawable } from './types/Drawable';\r\nimport { UI } from './UI';\r\nimport { IRect } from './types/Rect';\r\nimport { HiveWhale } from './Enemies/HiveWhale';\r\nimport { Explosion } from './Explosion/Explosion';\r\nimport { Bullet } from './Bullet';\r\n\r\nexport class Game implements IDrawable {\r\n  width = 1024;\r\n  height = 500;\r\n  canvas: HTMLCanvasElement;\r\n  ctx: CanvasRenderingContext2D;\r\n  score = 0;\r\n  keys: string[] = [];\r\n  enemies: Enemy[] = [];\r\n  particles: Particle[] = [];\r\n  explosions: Explosion[] = [];\r\n  bullets: Bullet[] = [];\r\n  player: Player;\r\n  control: Control;\r\n  ui: UI;\r\n  background: Background;\r\n  debug = false;\r\n\r\n  gameTime = 60000; // 1 min\r\n  speed = 1;\r\n\r\n  ammo = 20;\r\n  maxAmmo = 50;\r\n  ammoTimer = 0;\r\n  ammoInterval = 500;\r\n\r\n  enemyInterval = 1500;\r\n  enemyTimer = 0;\r\n\r\n  winningScore = 100;\r\n  gameOver = false;\r\n\r\n  constructor() {\r\n    this.canvas = <HTMLCanvasElement>document.getElementById('canvas');\r\n    this.ctx = <CanvasRenderingContext2D>this.canvas.getContext('2d');\r\n    this.canvas.width = this.width;\r\n    this.canvas.height = this.height;\r\n\r\n    this.player = new Player(this);\r\n    this.control = new Control(this);\r\n    this.ui = new UI(this);\r\n    this.background = new Background(this);\r\n  }\r\n\r\n  update(deltaTime: number) {\r\n    if (!this.gameOver) this.gameTime -= deltaTime;\r\n    if (this.gameTime < 0) this.gameOver = true;\r\n    this.ctx.fillStyle = '#4d79bc';\r\n    this.ctx.fillRect(0, 0, this.width, this.height);\r\n    this.background.update();\r\n    this.player.update(deltaTime);\r\n\r\n    if (this.ammoTimer > this.ammoInterval) {\r\n      if (this.ammo < this.maxAmmo) this.ammo++;\r\n      this.ammoTimer = 0;\r\n    } else {\r\n      this.ammoTimer += deltaTime;\r\n    }\r\n\r\n    this.enemies.forEach((enemy) => {\r\n      enemy.update();\r\n      if (this.checkCollistions(this.player, enemy)) {\r\n        enemy.touch();\r\n        if (this.score < 0) this.gameOver = true;\r\n      }\r\n      this.bullets.forEach((bullet) => {\r\n        if (this.checkCollistions(bullet, enemy)) {\r\n          enemy.lives--;\r\n          enemy.takeHit();\r\n          if (enemy.lives <= 0) {\r\n            enemy.kill();\r\n            if (!this.gameOver) this.score += enemy.score;\r\n            if (this.winningScore < this.score) this.gameOver = true;\r\n          }\r\n          bullet.markForDelete = true;\r\n        }\r\n      });\r\n    });\r\n\r\n    this.enemies = this.enemies.filter((enemy) => !enemy.markedForDelete);\r\n    if (this.enemyTimer > this.enemyInterval && !this.gameOver) {\r\n      this.addEnemy();\r\n      this.enemyTimer = 0;\r\n    } else {\r\n      this.enemyTimer += deltaTime;\r\n    }\r\n\r\n    this.particles.forEach((particle) => particle.update());\r\n    this.particles = this.particles.filter((particle) => !particle.markedForDelete);\r\n    this.explosions.forEach((explosion) => explosion.update(deltaTime));\r\n    this.explosions = this.explosions.filter((explosion) => !explosion.markedForDelete);\r\n    this.background.postUpdate();\r\n  }\r\n\r\n  draw() {\r\n    this.background.draw();\r\n    this.player.draw();\r\n    this.bullets.forEach(bullet => bullet.draw());\r\n    this.enemies.forEach((enemy) => enemy.draw());\r\n    this.particles.forEach((particle) => particle.draw());\r\n    this.explosions.forEach((explosion) => explosion.draw());\r\n    this.ui.draw();\r\n    this.background.postDraw();\r\n  }\r\n\r\n  private addEnemy() {\r\n    const enemiesMap = [Lucky, Angler1, Angler2, HiveWhale];\r\n    const randomIndex = Math.floor(Math.random() * (enemiesMap.length));\r\n    const RandomEnemy = enemiesMap[randomIndex];\r\n    this.enemies.push(new RandomEnemy(this));\r\n  }\r\n\r\n  private checkCollistions(rect1: IRect, rect2: IRect): boolean {\r\n    return (\r\n      rect1.x < rect2.x + rect2.width &&\r\n      rect1.x + rect1.width > rect2.x &&\r\n      rect1.y < rect2.y + rect2.height &&\r\n      rect1.y + rect1.height > rect2.y\r\n    );\r\n  }\r\n}\r\n"],"names":["$44faa45cf852f7b3$export$936d0764594b6eb3","width","x","y","constructor","game","image","speedModifier","this","height","update","speed","draw","ctx","drawImage","$fe7fb059fad9cdb6$export$668799e4797757a8","layers","topLayers","image1","document","getElementById","image2","image3","image4","forEach","layer","postUpdate","postDraw","$df28da8dd7a55ba3$export$7a7fa4424cb20976","controlKeys","shootKey","window","addEventListener","e","includes","key","keys","push","player","shoot","debug","index","indexOf","splice","$e131cb4d064cd49a$export$3075603db8e6204c","updateSprite","frameX","maxFrame","frameY","strokeRect","fillStyle","font","fillText","lives","toString","$ad09701981030b4b$export$c36c68baa13912a5","Math","floor","random","sizeModifier","parseFloat","toFixed","size","speedX","speedY","gravity","markedForDelete","angle","angleVelocity","bounced","bottomBounceBorder","save","translate","rotate","restore","$295af0b69e4179c7$export$7999860126b75c7","timer","fps","interval","super","deltaTime","$dabad1e2188f782e$export$2e80534920b24a5","$c684c4e8b1ea6219$export$718daf669a03dd21","$fdd92d509316a8b9$export$eefe978c73a9a6","takeHit","particles","kill","explosions","RandomExplosion","length","i","score","touch","gameOver","$12b97201f0633e01$export$8ee8616438d9455","type","$636adbe3af08f4c0$export$97ce4c3bf2eb187d","$d1542f2f1b530154$export$d4d7714104fbe89c","onTurbo","$d0213047f2e8bbc1$export$f90411c24f6aebf8","markForDelete","$6d91ef257fa813c6$export$2616165974278734","maxSpeed","turbo","turboTimer","turboLimit","bottomBorder","topBorder","bullets","bullet","filter","ammo","bottomShoot","maxAmmo","$33b28264c1504bd0$export$4b08aed5f1ec6952","fontSize","fontFamily","color","shadowOffsetX","shadowOffsetY","shadowColor","fillRect","formattedTime","gameTime","textAlign","title","subtitle","winningScore","$7527a65e3e423cad$export$3bf9263b7cac56ad","$03920008c46a8e1e$export$e880d4dc7bdd5f58","i1","drone","enemies","$b4e14b6b8da86996$var$game","ammoTimer","ammoInterval","enemyInterval","enemyTimer","canvas","getContext","control","ui","background","enemy","checkCollistions","addEnemy","particle","explosion","enemiesMap","RandomEnemy","rect1","rect2","$b4e14b6b8da86996$var$lastUpdateTime","$b4e14b6b8da86996$var$animate","timeStamp","requestAnimationFrame"],"version":3,"file":"index.4ac0a76f.js.map"}