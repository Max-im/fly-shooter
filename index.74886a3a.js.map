{"mappings":"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","sources":["src/components/Layer.ts","src/components/Background.ts","src/components/Control.ts","src/components/Sprite.ts","src/components/Enemies/Enemy.ts","src/components/Enemies/Angler1.ts","src/components/Enemies/Angler2.ts","src/components/Enemies/Drone.ts","src/components/Enemies/Lucky.ts","src/components/Bullet.ts","src/components/Player.ts","src/components/UI.ts","src/index.ts","src/components/Game.ts"],"sourcesContent":["import { Game } from './Game';\r\n\r\nexport class Layer {\r\n  game: Game;\r\n  image: any;\r\n  speedModifier: any;\r\n  height: number;\r\n  width = 1768;\r\n  x = 0;\r\n  y = 0;\r\n\r\n  constructor(game: Game, image: any, speedModifier: any) {\r\n    this.game = game;\r\n    this.image = image;\r\n    this.speedModifier = speedModifier;\r\n    this.height = this.game.height;\r\n  }\r\n\r\n  update() {\r\n    if (this.x <= -this.width) this.x = 0;\r\n    else this.x -= this.game.speed * this.speedModifier;\r\n  }\r\n\r\n  draw() {\r\n    this.game.ctx.drawImage(this.image, this.x, this.y);\r\n    this.game.ctx.drawImage(this.image, this.x + this.width, this.y);\r\n  }\r\n}\r\n","import { Game } from \"./Game\";\r\nimport { Layer } from \"./Layer\";\r\n\r\nexport class Background {\r\n    game: Game;\r\n    layers: Layer[] = [];\r\n    topLayers: Layer[] = [];\r\n\r\n    constructor(game: Game) {\r\n        this.game = game;\r\n        \r\n        const image1 = <HTMLImageElement>document.getElementById('layer1');\r\n        const image2 = <HTMLImageElement>document.getElementById('layer2');\r\n        const image3 = <HTMLImageElement>document.getElementById('layer3');\r\n        const image4 = <HTMLImageElement>document.getElementById('layer4');\r\n\r\n        this.layers = [\r\n            new Layer(this.game, image1, 0.2),\r\n            new Layer(this.game, image2, 0.4),\r\n            new Layer(this.game, image3, 1),\r\n        ];\r\n        this.topLayers = [\r\n            new Layer(this.game, image4, 1.5)\r\n        ]\r\n    }\r\n\r\n    update() {\r\n        this.layers.forEach(layer => layer.update());\r\n    }\r\n\r\n    postUpdate() {\r\n        this.topLayers.forEach(layer => layer.update());\r\n    }\r\n\r\n    draw() {\r\n        this.layers.forEach(layer => layer.draw());\r\n    }\r\n    \r\n    postDraw() {\r\n        this.topLayers.forEach(layer => layer.draw());\r\n    }\r\n}","import { Game } from \"./Game\";\r\n\r\nexport class Control {\r\n    game: Game;\r\n    private controlKeys = ['ArrowUp', 'ArrowDown'];\r\n    private shootKey = ' ';\r\n\r\n    constructor(game: Game) {\r\n        this.game = game;\r\n        window.addEventListener('keydown', e => {\r\n            if (this.controlKeys.includes(e.key) && !this.game.keys.includes(e.key)) {\r\n                this.game.keys.push(e.key);\r\n            } \r\n            if (this.shootKey === e.key) this.game.player.shoot();\r\n            if (e.key === 'd') this.game.debug = !this.game.debug;\r\n        });\r\n\r\n        window.addEventListener('keyup', e => {\r\n            const index = this.game.keys.indexOf(e.key);\r\n            if (index > -1) this.game.keys.splice(index, 1);\r\n        });\r\n    }\r\n}","import { Game } from \"./Game\";\r\n\r\nexport abstract class Sprite {\r\n    abstract image: HTMLImageElement;\r\n    abstract frameX: number;\r\n    abstract frameY: number;\r\n    abstract maxFrame: number;\r\n    abstract game: Game;\r\n    abstract x: number;\r\n    abstract y: number;\r\n    abstract width: number;\r\n    abstract height: number;\r\n\r\n    updateSprite() {\r\n        if (this.frameX < this.maxFrame) this.frameX++;\r\n        else this.frameX = 0;\r\n    }\r\n\r\n    drawSprite() {\r\n        this.game.ctx.drawImage(\r\n            this.image, \r\n            this.frameX * this.width,\r\n            this.frameY * this.height,\r\n            this.width,\r\n            this.height,\r\n            this.x, \r\n            this.y, \r\n            this.width, \r\n            this.height\r\n        );\r\n        if (this.game.debug) this.game.ctx.strokeRect(this.x, this.y, this.width, this.height);\r\n    }\r\n}\r\n","import { IDrawable } from \"components/types/Drawable\";\r\nimport { IUpdatable } from \"components/types/Updatable\";\r\nimport { Game } from \"../Game\";\r\nimport { Sprite } from \"../Sprite\";\r\n\r\n\r\nexport abstract class Enemy extends Sprite implements IDrawable, IUpdatable {\r\n    game: Game;\r\n    markedForDelete = false;\r\n    speedX: number;\r\n    x: number;\r\n    frameX = 0;\r\n\r\n    abstract maxFrame: number;\r\n    abstract frameY: number;\r\n    abstract score: number;\r\n    abstract lives: number;\r\n    abstract y: number;\r\n    abstract width: number;\r\n    abstract height: number;\r\n    abstract image: HTMLImageElement;\r\n    abstract type: string;\r\n    \r\n    constructor(game: Game) {\r\n        super();\r\n        this.game = game;\r\n        this.x = game.width;\r\n        this.speedX = Math.random() * -1.5 - 0.5;\r\n    }\r\n\r\n    update() {\r\n        this.x += this.speedX - this.game.speed;\r\n        if (this.x + this.width < 0) this.markedForDelete = true;\r\n        this.updateSprite();\r\n    }\r\n\r\n    draw() {\r\n        this.drawSprite();\r\n        if (this.game.debug) {\r\n            this.game.ctx.fillStyle = 'black';\r\n            this.game.ctx.font = '20px Helvetica';\r\n            this.game.ctx.fillText(this.lives.toString(), this.x, this.y);\r\n        }\r\n        \r\n    }\r\n}","import { Game } from \"components/Game\";\r\nimport { Enemy } from \"./Enemy\";\r\n\r\nexport class Angler1 extends Enemy {\r\n    y: number;\r\n    width = 228;\r\n    height = 169;\r\n    score = 2;\r\n    lives = 2;\r\n    image = <HTMLImageElement>document.getElementById('angler1');\r\n    frameY = Math.floor(Math.random() * 3);\r\n    maxFrame = 37;\r\n    type = 'angler1';\r\n\r\n    constructor(game: Game) {\r\n        super(game);\r\n        this.y = Math.random() * (game.height * 0.9 - this.height);\r\n    }\r\n}\r\n","import { Game } from \"components/Game\";\r\nimport { Enemy } from \"./Enemy\";\r\n\r\nexport class Angler2 extends Enemy {\r\n    y: number;\r\n    width = 213;\r\n    height = 165;\r\n    score = 3;\r\n    lives = 3;\r\n    image = <HTMLImageElement>document.getElementById('angler2');\r\n    frameY = Math.floor(Math.random() * 2);\r\n    maxFrame = 37;\r\n    type = 'angler2';\r\n\r\n    constructor(game: Game) {\r\n        super(game);\r\n        this.y = Math.random() * (game.height * 0.9 - this.height);\r\n    }\r\n}\r\n","import { Game } from \"components/Game\";\r\nimport { Enemy } from \"./Enemy\";\r\n\r\nexport class Drone extends Enemy {\r\n    y: number;\r\n    width = 115;\r\n    height = 95;\r\n    score = 3;\r\n    lives = 3;\r\n    image = <HTMLImageElement>document.getElementById('drone');\r\n    frameY = Math.floor(Math.random() * 2);\r\n    maxFrame = 39;\r\n    type = 'drone';\r\n\r\n    constructor(game: Game) {\r\n        super(game);\r\n        this.y = Math.random() * (game.height * 0.9 - this.height);\r\n    }\r\n}\r\n","import { Game } from \"components/Game\";\r\nimport { Enemy } from \"./Enemy\";\r\n\r\nexport class Lucky extends Enemy {\r\n    y: number;\r\n    width = 99;\r\n    height = 95;\r\n    score = 3;\r\n    lives = 3;\r\n    image = <HTMLImageElement>document.getElementById('lucky');\r\n    frameY = Math.floor(Math.random() * 2);\r\n    maxFrame = 37;\r\n    type = 'lucky';\r\n\r\n    constructor(game: Game) {\r\n        super(game);\r\n        this.y = Math.random() * (game.height * 0.9 - this.height);\r\n    }\r\n}\r\n","import { Game } from \"./Game\";\r\n\r\nexport class Bullet {\r\n    game: Game;\r\n    x: number;\r\n    y: number;\r\n    width = 10;\r\n    height = 3;\r\n    speed = 3;\r\n    markForDelete = false;\r\n    image = <HTMLImageElement>document.getElementById('bullet');\r\n\r\n    constructor(game: Game, x: number, y: number) {\r\n        this.game = game;\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    update() {\r\n        this.x += this.speed;\r\n\r\n        if (this.width > this.game.width * 0.8) this.markForDelete = true; \r\n    }\r\n\r\n    draw() {\r\n        this.game.ctx.drawImage(this.image, this.x, this.y)\r\n    }\r\n}","import { Game } from \"./Game\";\r\nimport { Bullet } from \"./Bullet\";\r\nimport { IDrawable } from \"./types/Drawable\";\r\nimport { IUpdatable } from \"./types/Updatable\";\r\nimport { Sprite } from \"./Sprite\";\r\n\r\nexport class Player extends Sprite implements IDrawable {\r\n    game: Game;\r\n    width = 120;\r\n    height = 190;\r\n    x = 20;\r\n    y = 100;\r\n    frameX = 0;\r\n    frameY = 0;\r\n    maxFrame = 37;\r\n    speedY = 0;\r\n    maxSpeed = 3;\r\n    bullets: Bullet[] = [];\r\n    image = <HTMLImageElement>document.getElementById('player');\r\n    powerUp = false;\r\n    powerUpTimer = 0;\r\n    powerUpLimit = 5000;\r\n\r\n    constructor(game: Game) {\r\n        super();\r\n        this.game = game;\r\n    } \r\n\r\n    update(deltaTime: number) {\r\n        if (this.game.keys.includes('ArrowUp')) this.speedY = -this.maxSpeed;\r\n        else if (this.game.keys.includes('ArrowDown')) this.speedY = this.maxSpeed;\r\n        else this.speedY = 0;\r\n        this.y += this.speedY;\r\n\r\n        const bottomBorder = this.game.height - this.height * 0.5;\r\n        const topBorder = -this.height * 0.5;\r\n        if (this.y > bottomBorder) this.y = bottomBorder; \r\n        else if (this.y < topBorder) this.y = topBorder; \r\n        \r\n        this.bullets.forEach(bullet => bullet.update());\r\n        this.bullets = this.bullets.filter(bullet => !bullet.markForDelete);\r\n        this.updateSprite();\r\n        if (this.powerUp) {\r\n            if (this.powerUpTimer > this.powerUpLimit) {\r\n                this.powerUpTimer = 0;\r\n                this.powerUp = false;\r\n                this.frameX = 0\r\n            } else {\r\n                this.powerUpTimer += deltaTime;\r\n                this.frameY = 1;\r\n                this.game.ammo += 0.1;\r\n            }\r\n        }\r\n    }\r\n\r\n    draw() {\r\n        this.bullets.forEach(bullet => bullet.draw());\r\n        this.drawSprite();\r\n    }\r\n\r\n    shoot() {\r\n        if (this.game.ammo > 0) {\r\n            this.bullets.push(new Bullet(this.game, this.x + 90, this.y + 33));\r\n            this.game.ammo--;\r\n        }\r\n        if (this.powerUp) this.bottomShoot();\r\n    }\r\n\r\n    private bottomShoot() {\r\n        if (this.game.ammo > 0) {\r\n            this.bullets.push(new Bullet(this.game, this.x + 90, this.y + 175));\r\n            this.game.ammo--;\r\n        }\r\n    }\r\n\r\n    enterPowerUp() {\r\n        this.powerUp = true;\r\n        this.powerUpTimer = 0;\r\n    }\r\n}","import { Game } from \"./Game\";\r\nimport { IDrawable } from \"./types/Drawable\";\r\n\r\nexport class UI implements IDrawable {\r\n    game: Game;\r\n    fontSize = 25;\r\n    fontFamily = 'Bangers';\r\n    color = 'yellow';\r\n\r\n    constructor(game: Game) {\r\n        this.game = game;\r\n    }\r\n\r\n    draw() {\r\n        const ctx = this.game.ctx;\r\n        ctx.save();\r\n        ctx.font = this.fontSize + 'px ' + this.fontFamily;\r\n        ctx.fillStyle = 'white';\r\n        ctx.shadowOffsetX = 2;\r\n        ctx.shadowOffsetY = 2;\r\n        ctx.shadowColor = 'black';\r\n        ctx.fillText('Score: ' + this.game.score, 20, 40);\r\n\r\n        ctx.fillStyle = this.game.player.powerUp ? this.color : 'white';\r\n        for(let i = 0; i < this.game.ammo; i++) {\r\n            ctx.fillRect(20 + 5 * i, 50, 3, 20);\r\n        }\r\n\r\n        ctx.fillStyle = 'white';\r\n        const formattedTime = (this.game.gameTime * 0.001).toFixed(1);\r\n        ctx.fillText('Timer: ' + formattedTime, 20, 100);\r\n\r\n        if (this.game.gameOver) {\r\n            ctx.textAlign = 'center';\r\n            let title = 'You Lost!';\r\n            let subtitle = 'Try Again Next Time!';\r\n            \r\n            if (this.game.winningScore < this.game.score) {\r\n                title = 'You Win!'\r\n                subtitle = 'Well Done!'\r\n            }\r\n\r\n            ctx.fillStyle = 'white';\r\n            ctx.font = '50px ' + this.fontFamily;\r\n            ctx.fillText(title, this.game.width * 0.5, this.game.height * 0.5 - 30);\r\n            ctx.font = '25px ' + this.fontFamily;\r\n            ctx.fillText(subtitle, this.game.width * 0.5, this.game.height * 0.5 + 30);\r\n        }\r\n        ctx.restore();\r\n    }\r\n}","import { Game } from \"./components/Game\";\r\n\r\nconst game = new Game();\r\n\r\nlet lastUpdateTime = 0;\r\n\r\nfunction animate(timeStamp: number) {\r\n    const deltaTime = timeStamp - lastUpdateTime;\r\n    lastUpdateTime = timeStamp;\r\n    game.update(deltaTime);\r\n    game.draw();\r\n    requestAnimationFrame(animate);\r\n}\r\nanimate(0);","import { Background } from './Background';\r\nimport { Control } from './Control';\r\nimport { Angler1 } from './Enemies/Angler1';\r\nimport { Angler2 } from './Enemies/Angler2';\r\nimport { Drone } from './Enemies/Drone';\r\nimport { Enemy } from './Enemies/Enemy';\r\nimport { Lucky } from './Enemies/Lucky';\r\nimport { Player } from './Player';\r\nimport { IDrawable } from './types/Drawable';\r\nimport { UI } from './UI';\r\n\r\nexport class Game implements IDrawable {\r\n  width = 1024;\r\n  height = 500;\r\n  canvas: HTMLCanvasElement;\r\n  ctx: CanvasRenderingContext2D;\r\n  score = 0;\r\n  keys: string[] = [];\r\n  enemies: Enemy[] = [];\r\n  player: Player;\r\n  control: Control;\r\n  ui: UI;\r\n  background: Background;\r\n  debug = false;\r\n\r\n  gameTime = 0;\r\n  timeLimit = 5000000;\r\n  speed = 1;\r\n\r\n  ammo = 20;\r\n  maxAmmo = 50;\r\n  ammoTimer = 0;\r\n  ammoInterval = 500;\r\n\r\n  enemyInterval = 1000;\r\n  enemyTimer = 0;\r\n\r\n  winningScore = 20;\r\n  gameOver = false;\r\n\r\n  constructor() {\r\n    this.canvas = <HTMLCanvasElement>document.getElementById('canvas');\r\n    this.ctx = <CanvasRenderingContext2D>this.canvas.getContext('2d');\r\n    this.canvas.width = this.width;\r\n    this.canvas.height = this.height;\r\n\r\n    this.player = new Player(this);\r\n    this.control = new Control(this);\r\n    this.ui = new UI(this);\r\n    this.background = new Background(this);\r\n  }\r\n\r\n  update(deltaTime: number) {\r\n    if(!this.gameOver) this.gameTime += deltaTime;\r\n    if(this.gameTime > this.timeLimit) this.gameOver = true;\r\n    this.ctx.fillStyle = '#4d79bc';\r\n    this.ctx.fillRect(0, 0, this.width, this.height);\r\n    this.background.update();\r\n    this.player.update(deltaTime);\r\n    \r\n    if (this.ammoTimer > this.ammoInterval) {\r\n      if (this.ammo < this.maxAmmo) this.ammo++;\r\n      this.ammoTimer = 0;\r\n    } else {\r\n      this.ammoTimer += deltaTime;\r\n    }\r\n    \r\n    this.enemies.forEach((enemy) => {\r\n        enemy.update();\r\n        if (this.checkCollistions(this.player, enemy)) {\r\n            enemy.markedForDelete = true;\r\n            if (enemy.type === 'lucky') this.player.enterPowerUp();\r\n            else this.score--;\r\n        }\r\n        this.player.bullets.forEach(bullet => {\r\n            if(this.checkCollistions(bullet, enemy)) {\r\n                enemy.lives--;\r\n                if (enemy.lives <= 0) {\r\n                    enemy.markedForDelete = true;\r\n                    if(!this.gameOver) this.score += enemy.score;\r\n                    if (this.winningScore < this.score) this.gameOver = true;\r\n                }\r\n                bullet.markForDelete = true;\r\n            }\r\n        });\r\n        \r\n    });\r\n\r\n    this.enemies = this.enemies.filter((enemy) => !enemy.markedForDelete);\r\n    if (this.enemyTimer > this.enemyInterval && !this.gameOver) {\r\n      this.addEnemy();\r\n      this.enemyTimer = 0;\r\n    } else {\r\n      this.enemyTimer += deltaTime;\r\n    }\r\n\r\n    this.background.postUpdate();\r\n  }\r\n\r\n  draw() {\r\n    this.background.draw();\r\n    this.player.draw();\r\n    this.enemies.forEach((enemy) => enemy.draw());\r\n    this.ui.draw();\r\n    this.background.postDraw();\r\n  }\r\n\r\n  private addEnemy() {\r\n    const enemiesMap = [Lucky, Angler1, Angler2, Drone];\r\n    const randomIndex = Math.floor(Math.random() * (enemiesMap.length - 1));\r\n    const RandomEnemy =  enemiesMap[randomIndex];\r\n    this.enemies.push(new RandomEnemy(this));\r\n  }\r\n\r\n  private checkCollistions(rect1: any, rect2: any): boolean {\r\n    return (\r\n      rect1.x < rect2.x + rect2.width &&\r\n      rect1.x + rect1.width > rect2.x &&\r\n      rect1.y < rect2.y + rect2.height &&\r\n      rect1.y + rect1.height > rect2.y\r\n    );\r\n  }\r\n}\r\n"],"names":["$44faa45cf852f7b3$export$936d0764594b6eb3","width","x","y","constructor","game","image","speedModifier","this","height","update","speed","draw","ctx","drawImage","$fe7fb059fad9cdb6$export$668799e4797757a8","layers","topLayers","image1","document","getElementById","image2","image3","image4","forEach","layer","postUpdate","postDraw","$df28da8dd7a55ba3$export$7a7fa4424cb20976","controlKeys","shootKey","window","addEventListener","e","includes","key","keys","push","player","shoot","debug","index","indexOf","splice","$e131cb4d064cd49a$export$3075603db8e6204c","updateSprite","frameX","maxFrame","drawSprite","frameY","strokeRect","$fdd92d509316a8b9$export$eefe978c73a9a6","markedForDelete","super","speedX","Math","random","fillStyle","font","fillText","lives","toString","$12b97201f0633e01$export$8ee8616438d9455","score","floor","type","$636adbe3af08f4c0$export$97ce4c3bf2eb187d","$7527a65e3e423cad$export$3bf9263b7cac56ad","$d1542f2f1b530154$export$d4d7714104fbe89c","$d0213047f2e8bbc1$export$f90411c24f6aebf8","markForDelete","$6d91ef257fa813c6$export$2616165974278734","speedY","maxSpeed","bullets","powerUp","powerUpTimer","powerUpLimit","deltaTime","bottomBorder","topBorder","bullet","filter","ammo","bottomShoot","enterPowerUp","$33b28264c1504bd0$export$4b08aed5f1ec6952","fontSize","fontFamily","color","save","shadowOffsetX","shadowOffsetY","shadowColor","i","fillRect","formattedTime","gameTime","toFixed","gameOver","textAlign","title","subtitle","winningScore","restore","$b4e14b6b8da86996$var$game","enemies","timeLimit","maxAmmo","ammoTimer","ammoInterval","enemyInterval","enemyTimer","canvas","getContext","control","ui","background","enemy","checkCollistions","addEnemy","enemiesMap","RandomEnemy","length","rect1","rect2","$b4e14b6b8da86996$var$lastUpdateTime","$b4e14b6b8da86996$var$animate","timeStamp","requestAnimationFrame"],"version":3,"file":"index.74886a3a.js.map"}