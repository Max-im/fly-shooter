{"mappings":"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","sources":["src/components/Layer.ts","src/components/Background.ts","src/components/Control.ts","src/components/Sprite.ts","src/components/Particle.ts","src/components/Explosion/Explosion.ts","src/components/Explosion/SmokeExplosion.ts","src/components/Explosion/FIreExplosion.ts","src/components/Enemies/Enemy.ts","src/components/Enemies/Angler1.ts","src/components/Enemies/Angler2.ts","src/components/Enemies/Lucky.ts","src/components/Bullet.ts","src/components/Player.ts","src/components/UI.ts","src/components/Enemies/Drone.ts","src/components/Enemies/HiveWhale.ts","src/index.ts","src/components/Game.ts"],"sourcesContent":["import { Game } from './Game';\r\n\r\nexport class Layer {\r\n  game: Game;\r\n  image: any;\r\n  speedModifier: any;\r\n  height: number;\r\n  width = 1768;\r\n  x = 0;\r\n  y = 0;\r\n\r\n  constructor(game: Game, image: any, speedModifier: any) {\r\n    this.game = game;\r\n    this.image = image;\r\n    this.speedModifier = speedModifier;\r\n    this.height = this.game.height;\r\n  }\r\n\r\n  update() {\r\n    if (this.x <= -this.width) this.x = 0;\r\n    else this.x -= this.game.speed * this.speedModifier;\r\n  }\r\n\r\n  draw() {\r\n    this.game.ctx.drawImage(this.image, this.x, this.y);\r\n    this.game.ctx.drawImage(this.image, this.x + this.width, this.y);\r\n  }\r\n}\r\n","import { Game } from \"./Game\";\r\nimport { Layer } from \"./Layer\";\r\n\r\nexport class Background {\r\n    game: Game;\r\n    layers: Layer[] = [];\r\n    topLayers: Layer[] = [];\r\n\r\n    constructor(game: Game) {\r\n        this.game = game;\r\n        \r\n        const image1 = <HTMLImageElement>document.getElementById('layer1');\r\n        const image2 = <HTMLImageElement>document.getElementById('layer2');\r\n        const image3 = <HTMLImageElement>document.getElementById('layer3');\r\n        const image4 = <HTMLImageElement>document.getElementById('layer4');\r\n\r\n        this.layers = [\r\n            new Layer(this.game, image1, 0.2),\r\n            new Layer(this.game, image2, 0.4),\r\n            new Layer(this.game, image3, 1),\r\n        ];\r\n        this.topLayers = [\r\n            new Layer(this.game, image4, 1.5)\r\n        ]\r\n    }\r\n\r\n    update() {\r\n        this.layers.forEach(layer => layer.update());\r\n    }\r\n\r\n    postUpdate() {\r\n        this.topLayers.forEach(layer => layer.update());\r\n    }\r\n\r\n    draw() {\r\n        this.layers.forEach(layer => layer.draw());\r\n    }\r\n    \r\n    postDraw() {\r\n        this.topLayers.forEach(layer => layer.draw());\r\n    }\r\n}","import { Game } from './Game';\r\n\r\nexport class Control {\r\n  // @ts-ignore\r\n  isMobile = navigator.userAgentData.mobile;\r\n  game: Game;\r\n  private controlKeys = ['ArrowUp', 'ArrowDown'];\r\n  private shootKey = ' ';\r\n\r\n  constructor(game: Game) {\r\n    this.game = game;\r\n\r\n    if (this.isMobile) this.addMobileControl();\r\n    else this.addDesktopControl();\r\n  }\r\n\r\n  addMobileControl() {\r\n    try {\r\n      if (this.isMobile) this.game.canvas.requestFullscreen();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n\r\n    window.addEventListener('touchstart', (e) => {\r\n      console.log('start');\r\n    });\r\n\r\n    document.addEventListener('touchmove', (e) => {\r\n      const y = e.changedTouches[0].clientY;\r\n      const yPlayer = this.game.player.y + this.game.player.height / 2;\r\n\r\n      if (y < yPlayer && !this.game.keys.includes('ArrowUp')) {\r\n        this.game.keys.push('ArrowUp');\r\n        const index = this.game.keys.indexOf('ArrowDown');\r\n        if (index > -1) this.game.keys.splice(index, 1);\r\n      } else if (y > yPlayer && !this.game.keys.includes('ArrowDown')) {\r\n        this.game.keys.push('ArrowDown');\r\n        const index = this.game.keys.indexOf('ArrowUp');\r\n        if (index > -1) this.game.keys.splice(index, 1);\r\n      }\r\n    });\r\n\r\n    window.addEventListener('touchend', (e) => {\r\n      const index = this.game.keys.indexOf('ArrowUp');\r\n      const index2 = this.game.keys.indexOf('ArrowDown');\r\n      if (index > -1) this.game.keys.splice(index, 1);\r\n      if (index2 > -1) this.game.keys.splice(index2, 1);\r\n    });\r\n  }\r\n\r\n  addDesktopControl() {\r\n    window.addEventListener('keydown', (e) => {\r\n      if (this.controlKeys.includes(e.key) && !this.game.keys.includes(e.key)) {\r\n        this.game.keys.push(e.key);\r\n      }\r\n      if (this.shootKey === e.key) this.game.player.shoot();\r\n      if (e.key === 'd') this.game.debug = !this.game.debug;\r\n    });\r\n\r\n    window.addEventListener('keyup', (e) => {\r\n      const index = this.game.keys.indexOf(e.key);\r\n      if (index > -1) this.game.keys.splice(index, 1);\r\n    });\r\n  }\r\n}\r\n","import { Game } from \"./Game\";\r\n\r\nexport abstract class Sprite {\r\n    abstract image: HTMLImageElement;\r\n    abstract frameX: number;\r\n    abstract frameY: number;\r\n    abstract maxFrame: number;\r\n    abstract game: Game;\r\n    abstract x: number;\r\n    abstract y: number;\r\n    abstract width: number;\r\n    abstract height: number;\r\n\r\n    updateSprite() {\r\n        if (this.frameX < this.maxFrame) this.frameX++;\r\n        else this.frameX = 0;\r\n    }\r\n\r\n    draw() {\r\n        this.game.ctx.drawImage(\r\n            this.image, \r\n            this.frameX * this.width,\r\n            this.frameY * this.height,\r\n            this.width,\r\n            this.height,\r\n            this.x, \r\n            this.y, \r\n            this.width, \r\n            this.height\r\n        );\r\n        if (this.game.debug) {\r\n            this.game.ctx.strokeRect(this.x, this.y, this.width, this.height);\r\n            if ('lives' in this) {\r\n                this.game.ctx.fillStyle = 'black';\r\n                this.game.ctx.font = '20px Helvetica';\r\n                // @ts-ignore\r\n                this.game.ctx.fillText(this.lives.toString(), this.x, this.y);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Game } from './Game';\r\n\r\nexport class Particle {\r\n  x: number;\r\n  y: number;\r\n  game: Game;\r\n  image = <HTMLImageElement>document.getElementById('gears');\r\n  frameX = Math.floor(Math.random() * 3);\r\n  frameY = Math.floor(Math.random() * 3);\r\n  width = 50;\r\n  height = 50;\r\n  sizeModifier = parseFloat((Math.random() * 0.5 + 0.5).toFixed(1));\r\n  size = this.width * this.sizeModifier;\r\n  speedX = Math.random() * 6 - 3;\r\n  speedY = Math.random() * -15;\r\n  gravity = 0.5;\r\n  markedForDelete = false;\r\n  angle = 0;\r\n  angleVelocity = Math.random() * 0.2 - 0.1;\r\n  bounced = 2;\r\n  bottomBounceBorder = 80 * Math.random() + 60;\r\n\r\n  constructor(game: Game, x: number, y: number) {\r\n    this.game = game;\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  update() {\r\n    this.angle += this.angleVelocity;\r\n    this.speedY += this.gravity;\r\n    this.x -= this.speedX + this.game.speed;\r\n    this.y += this.speedY;\r\n    if (this.y > this.game.height + this.size || this.x < 0 - this.size)\r\n      this.markedForDelete = true;\r\n    if (this.y > this.game.height - this.bottomBounceBorder && this.bounced > 0) {\r\n      this.bounced--;\r\n      this.speedY *= -0.5;\r\n    }\r\n  }\r\n\r\n  draw() {\r\n    this.game.ctx.save();\r\n    this.game.ctx.translate(this.x, this.y);\r\n    this.game.ctx.rotate(this.angle);\r\n\r\n    this.game.ctx.drawImage(\r\n      this.image,\r\n      this.frameX * this.size,\r\n      this.frameY * this.size,\r\n      this.width,\r\n      this.height,\r\n      this.size * -0.5,\r\n      this.size * -0.5,\r\n      this.width,\r\n      this.height\r\n    );\r\n    this.game.ctx.restore();\r\n  }\r\n}\r\n","import { Game } from \"components/Game\";\r\nimport { Sprite } from \"../Sprite\";\r\n\r\nexport abstract class Explosion extends Sprite {\r\n    game: Game;\r\n    frameX = 0;\r\n    frameY = 0;\r\n    height = 200;\r\n    timer = 0;\r\n    fps = 30;\r\n    interval = 1000 / this.fps;\r\n    markedForDelete = false;\r\n    \r\n    abstract x: number;\r\n    abstract y: number;\r\n    abstract image: HTMLImageElement;\r\n    abstract maxFrame: number;\r\n\r\n    constructor(game: Game) {\r\n        super();\r\n        this.game = game;\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        this.x -= this.game.speed;\r\n        if (this.timer > this.interval) {\r\n            this.frameX++;\r\n            this.timer = 0;\r\n        } else this.timer += deltaTime;\r\n        if (this.frameX > this.maxFrame) this.markedForDelete = true\r\n    }\r\n}\r\n","import { Game } from \"components/Game\";\r\nimport { Explosion } from \"./Explosion\";\r\n\r\nexport class SmokeExplosion extends Explosion {\r\n    image = <HTMLImageElement>document.getElementById('smoke');\r\n    maxFrame = 8;\r\n    width = 200;\r\n    height = 200;\r\n    x: number;\r\n    y: number;\r\n\r\n    constructor(game: Game, x: number, y: number) {\r\n        super(game);\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}","import { Game } from \"components/Game\";\r\nimport { Explosion } from \"./Explosion\";\r\n\r\nexport class FireExplosion extends Explosion {\r\n    image = <HTMLImageElement>document.getElementById('fire');\r\n    maxFrame = 8;\r\n    width = 200;\r\n    height = 200;\r\n    x: number;\r\n    y: number;\r\n\r\n    constructor(game: Game, x: number, y: number) {\r\n        super(game);\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}","import { IDrawable } from \"components/types/Drawable\";\r\nimport { IUpdatable } from \"components/types/Updatable\";\r\nimport { Game } from \"../Game\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { Particle } from \"../Particle\";\r\nimport { SmokeExplosion } from \"../Explosion/SmokeExplosion\";\r\nimport { FireExplosion } from \"../Explosion/FIreExplosion\";\r\n\r\nexport abstract class Enemy extends Sprite implements IDrawable, IUpdatable {\r\n    game: Game;\r\n    markedForDelete = false;\r\n    speedX: number;\r\n    x: number;\r\n    frameX = 0;\r\n\r\n    abstract maxFrame: number;\r\n    abstract frameY: number;\r\n    abstract score: number;\r\n    abstract lives: number;\r\n    abstract y: number;\r\n    abstract width: number;\r\n    abstract height: number;\r\n    abstract image: HTMLImageElement;\r\n    abstract type: string;\r\n    \r\n    constructor(game: Game) {\r\n        super();\r\n        this.game = game;\r\n        this.x = game.width;\r\n        this.speedX = Math.random() * -1.5 - 0.5;\r\n    }\r\n\r\n    update() {\r\n        this.x += this.speedX - this.game.speed;\r\n        if (this.x + this.width < 0) this.markedForDelete = true;\r\n        this.updateSprite();\r\n    }\r\n\r\n    takeHit() {\r\n        this.lives--;\r\n        this.game.particles.push(new Particle(this.game, this.x + this.width * 0.5, this.y + this.height * 0.5));\r\n    }\r\n    \r\n    kill() {\r\n        this.markedForDelete = true;\r\n        // @ts-ignore\r\n        const explosions = [FireExplosion, SmokeExplosion];\r\n        const index = Math.floor(Math.random() * explosions.length);\r\n        const RandomExplosion = explosions[index];\r\n        this.game.explosions.push((new RandomExplosion(this.game, this.x, this.y)));\r\n        for (let i = 0; i < this.score; i++) {\r\n            this.game.particles.push(new Particle(this.game, this.x + this.width * 0.5, this.y + this.height * 0.5))\r\n        }\r\n    }\r\n\r\n    touch() {\r\n        if (!this.game.gameOver) this.game.score -= this.score; \r\n        this.kill();\r\n    }\r\n}","import { Game } from \"components/Game\";\r\nimport { Enemy } from \"./Enemy\";\r\n\r\nexport class Angler1 extends Enemy {\r\n    y: number;\r\n    width = 228;\r\n    height = 169;\r\n    score = 2;\r\n    lives = 2;\r\n    image = <HTMLImageElement>document.getElementById('angler1');\r\n    frameY = Math.floor(Math.random() * 3);\r\n    maxFrame = 37;\r\n    type = 'angler1';\r\n\r\n    constructor(game: Game) {\r\n        super(game);\r\n        this.y = Math.random() * (game.height * 0.95- this.height);\r\n    }\r\n}\r\n","import { Game } from \"components/Game\";\r\nimport { Enemy } from \"./Enemy\";\r\n\r\nexport class Angler2 extends Enemy {\r\n    y: number;\r\n    width = 213;\r\n    height = 165;\r\n    score = 3;\r\n    lives = 3;\r\n    image = <HTMLImageElement>document.getElementById('angler2');\r\n    frameY = Math.floor(Math.random() * 2);\r\n    maxFrame = 37;\r\n    type = 'angler2';\r\n\r\n\r\n    constructor(game: Game) {\r\n        super(game);\r\n        this.y = Math.random() * (game.height * 0.95 - this.height);\r\n    }\r\n}\r\n","import { Game } from \"components/Game\";\r\nimport { Enemy } from \"./Enemy\";\r\n\r\nexport class Lucky extends Enemy {\r\n    y: number;\r\n    width = 99;\r\n    height = 95;\r\n    score = 0;\r\n    lives = 3;\r\n    image = <HTMLImageElement>document.getElementById('lucky');\r\n    frameY = Math.floor(Math.random() * 2);\r\n    maxFrame = 37;\r\n    type = 'lucky';\r\n\r\n    constructor(game: Game) {\r\n        super(game);\r\n        this.y = Math.random() * (game.height * 0.9 - this.height);\r\n    }\r\n\r\n    touch() {\r\n        this.game.player.onTurbo();\r\n        this.kill();\r\n    }\r\n}\r\n","import { Game } from \"./Game\";\r\n\r\nexport class Bullet {\r\n    game: Game;\r\n    x: number;\r\n    y: number;\r\n    width = 10;\r\n    height = 3;\r\n    speed = 3;\r\n    markForDelete = false;\r\n    image = <HTMLImageElement>document.getElementById('bullet');\r\n\r\n    constructor(game: Game, x: number, y: number) {\r\n        this.game = game;\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    update() {\r\n        this.x += this.speed;\r\n\r\n        if (this.width > this.game.width * 0.8) this.markForDelete = true; \r\n    }\r\n\r\n    draw() {\r\n        this.game.ctx.drawImage(this.image, this.x, this.y)\r\n    }\r\n}","import { Game } from \"./Game\";\r\nimport { Bullet } from \"./Bullet\";\r\nimport { IDrawable } from \"./types/Drawable\";\r\nimport { IUpdatable } from \"./types/Updatable\";\r\nimport { Sprite } from \"./Sprite\";\r\n\r\nexport class Player extends Sprite implements IDrawable {\r\n    game: Game;\r\n    width = 120;\r\n    height = 190;\r\n    x = 20;\r\n    y = 100;\r\n    frameX = 0;\r\n    frameY = 0;\r\n    maxFrame = 37;\r\n    speedY = 0;\r\n    maxSpeed = 3;\r\n    image = <HTMLImageElement>document.getElementById('player');\r\n    turbo = false;\r\n    turboTimer = 0;\r\n    turboLimit = 5000;\r\n\r\n    constructor(game: Game) {\r\n        super();\r\n        this.game = game;\r\n    } \r\n\r\n    update(deltaTime: number) {\r\n        if (this.game.keys.includes('ArrowUp')) this.speedY = -this.maxSpeed;\r\n        else if (this.game.keys.includes('ArrowDown')) this.speedY = this.maxSpeed;\r\n        else this.speedY = 0;\r\n        this.y += this.speedY;\r\n\r\n        const bottomBorder = this.game.height - this.height * 0.5;\r\n        const topBorder = -this.height * 0.5;\r\n        if (this.y > bottomBorder) this.y = bottomBorder; \r\n        else if (this.y < topBorder) this.y = topBorder; \r\n        \r\n        this.game.bullets.forEach(bullet => bullet.update());\r\n        this.game.bullets = this.game.bullets.filter(bullet => !bullet.markForDelete);\r\n        this.updateSprite();\r\n        if (this.turbo) {\r\n            if (this.turboTimer > this.turboLimit) {\r\n                this.turboTimer = 0;\r\n                this.turbo = false;\r\n                this.frameY = 0\r\n            } else {\r\n                this.turboTimer += deltaTime;\r\n                this.frameY = 1;\r\n                this.game.ammo += 0.1;\r\n            }\r\n        }\r\n    }\r\n\r\n    shoot() {\r\n        if (this.game.ammo > 0) {\r\n            this.game.bullets.push(new Bullet(this.game, this.x + 90, this.y + 33));\r\n            this.game.ammo--;\r\n        }\r\n        if (this.turbo) this.bottomShoot();\r\n    }\r\n\r\n    private bottomShoot() {\r\n        if (this.game.ammo > 0) {\r\n            this.game.bullets.push(new Bullet(this.game, this.x + 90, this.y + 175));\r\n            this.game.ammo--;\r\n        }\r\n    }\r\n\r\n    onTurbo() {\r\n        this.turbo = true;\r\n        this.turboTimer = 0;\r\n        if(this.game.ammo< this.game.maxAmmo) this.game.ammo = this.game.maxAmmo;\r\n    }\r\n}","import { Game } from \"./Game\";\r\nimport { IDrawable } from \"./types/Drawable\";\r\n\r\nexport class UI implements IDrawable {\r\n    game: Game;\r\n    fontSize = 25;\r\n    fontFamily = 'Bangers';\r\n    color = 'yellow';\r\n\r\n    constructor(game: Game) {\r\n        this.game = game;\r\n    }\r\n\r\n    draw() {\r\n        const ctx = this.game.ctx;\r\n        ctx.save();\r\n        ctx.font = this.fontSize + 'px ' + this.fontFamily;\r\n        ctx.fillStyle = 'white';\r\n        ctx.shadowOffsetX = 2;\r\n        ctx.shadowOffsetY = 2;\r\n        ctx.shadowColor = 'black';\r\n        ctx.fillText('Score: ' + this.game.score, 20, 40);\r\n\r\n        ctx.fillStyle = this.game.player.turbo ? this.color : 'white';\r\n        for(let i = 0; i < this.game.ammo; i++) {\r\n            ctx.fillRect(20 + 5 * i, 50, 3, 20);\r\n        }\r\n\r\n        ctx.fillStyle = 'white';\r\n        const formattedTime = (this.game.gameTime * 0.001).toFixed(1);\r\n        ctx.fillText('Time left: ' + formattedTime, 20, 100);\r\n\r\n        if (this.game.gameOver) {\r\n            ctx.textAlign = 'center';\r\n            let title = 'You Lost!';\r\n            let subtitle = 'Try Again Next Time!';\r\n            \r\n            if (this.game.winningScore < this.game.score) {\r\n                title = 'You Win!'\r\n                subtitle = 'Well Done!'\r\n            }\r\n\r\n            ctx.fillStyle = 'white';\r\n            ctx.font = '58px ' + this.fontFamily;\r\n            ctx.fillText(title, this.game.width * 0.5, this.game.height * 0.5 - 30);\r\n            ctx.font = '25px ' + this.fontFamily;\r\n            ctx.fillText(subtitle, this.game.width * 0.5, this.game.height * 0.5 + 30);\r\n        }\r\n        ctx.restore();\r\n    }\r\n}","import { Game } from \"components/Game\";\r\nimport { Enemy } from \"./Enemy\";\r\n\r\nexport class Drone extends Enemy {\r\n    y: number;\r\n    width = 115;\r\n    height = 95;\r\n    score = 3;\r\n    lives = 3;\r\n    image = <HTMLImageElement>document.getElementById('drone');\r\n    frameY = Math.floor(Math.random() * 2);\r\n    maxFrame = 39;\r\n    type = 'drone';\r\n    speedX = Math.random() * -4.2 - 0.5;\r\n\r\n    constructor(game: Game, x: number, y: number) {\r\n        super(game);\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}\r\n","import { Game } from \"components/Game\";\r\nimport { Particle } from \"../Particle\";\r\nimport { Drone } from \"./Drone\";\r\nimport { Enemy } from \"./Enemy\";\r\n\r\nexport class HiveWhale extends Enemy {\r\n    y: number;\r\n    width = 400;\r\n    height = 227;\r\n    score = 15;\r\n    lives = 15;\r\n    image = <HTMLImageElement>document.getElementById('hivewhale');\r\n    frameY = 0;\r\n    maxFrame = 37;\r\n    type = 'hive';\r\n    speedX = Math.random() * -1.2 - 0.2;\r\n\r\n    constructor(game: Game) {\r\n        super(game);\r\n        this.y = Math.random() * (game.height * 0.95 - this.height);\r\n    }\r\n\r\n    kill() {\r\n        this.markedForDelete = true;\r\n        for (let i = 0; i < this.score; i++) {\r\n            this.game.particles.push(new Particle(this.game, this.x + this.width * 0.5, this.y + this.height * 0.5))\r\n        }\r\n        for (let i = 0; i < 5; i++) {\r\n            const drone = new Drone(this.game, this.x + Math.random() * this.width, this.y + Math.random() * this.height * 0.5);\r\n            this.game.enemies.push(drone);\r\n        }\r\n    }\r\n}\r\n","import { Game } from \"./components/Game\";\r\n\r\nconst game = new Game();\r\n\r\nlet lastUpdateTime = 0;\r\n\r\nfunction animate(timeStamp: number) {\r\n    const deltaTime = timeStamp - lastUpdateTime;\r\n    lastUpdateTime = timeStamp;\r\n    game.update(deltaTime);\r\n    game.draw();\r\n    requestAnimationFrame(animate);\r\n}\r\nanimate(0);","import { Background } from './Background';\r\nimport { Control } from './Control';\r\nimport { Angler1 } from './Enemies/Angler1';\r\nimport { Angler2 } from './Enemies/Angler2';\r\nimport { Drone } from './Enemies/Drone';\r\nimport { Enemy } from './Enemies/Enemy';\r\nimport { Lucky } from './Enemies/Lucky';\r\nimport { Player } from './Player';\r\nimport { Particle } from './Particle';\r\nimport { IDrawable } from './types/Drawable';\r\nimport { UI } from './UI';\r\nimport { IRect } from './types/Rect';\r\nimport { HiveWhale } from './Enemies/HiveWhale';\r\nimport { Explosion } from './Explosion/Explosion';\r\nimport { Bullet } from './Bullet';\r\n\r\nexport class Game implements IDrawable {\r\n  width = 1024;\r\n  height = 500;\r\n  canvas: HTMLCanvasElement;\r\n  ctx: CanvasRenderingContext2D;\r\n  score = 0;\r\n  keys: string[] = [];\r\n  enemies: Enemy[] = [];\r\n  particles: Particle[] = [];\r\n  explosions: Explosion[] = [];\r\n  bullets: Bullet[] = [];\r\n  player: Player;\r\n  control: Control;\r\n  ui: UI;\r\n  background: Background;\r\n  debug = false;\r\n\r\n  gameTime = 60000; // 1 min\r\n  speed = 1;\r\n\r\n  ammo = 20;\r\n  maxAmmo = 50;\r\n  ammoTimer = 0;\r\n  ammoInterval = 500;\r\n\r\n  enemyInterval = 1500;\r\n  enemyTimer = 0;\r\n\r\n  winningScore = 100;\r\n  gameOver = false;\r\n\r\n  constructor() {\r\n    this.canvas = <HTMLCanvasElement>document.getElementById('canvas');\r\n    this.ctx = <CanvasRenderingContext2D>this.canvas.getContext('2d');\r\n    this.canvas.width = this.width;\r\n    this.canvas.height = this.height;\r\n\r\n    this.player = new Player(this);\r\n    this.control = new Control(this);\r\n    this.ui = new UI(this);\r\n    this.background = new Background(this);\r\n  }\r\n\r\n  update(deltaTime: number) {\r\n    if (!this.gameOver) this.gameTime -= deltaTime;\r\n    if (this.gameTime < 0) this.gameOver = true;\r\n    this.ctx.fillStyle = '#4d79bc';\r\n    this.ctx.fillRect(0, 0, this.width, this.height);\r\n    this.background.update();\r\n    this.player.update(deltaTime);\r\n\r\n    if (this.ammoTimer > this.ammoInterval) {\r\n      if (this.ammo < this.maxAmmo) this.ammo++;\r\n      this.ammoTimer = 0;\r\n    } else {\r\n      this.ammoTimer += deltaTime;\r\n    }\r\n\r\n    this.enemies.forEach((enemy) => {\r\n      enemy.update();\r\n      if (this.checkCollistions(this.player, enemy)) {\r\n        enemy.touch();\r\n        if (this.score < 0) this.gameOver = true;\r\n      }\r\n      this.bullets.forEach((bullet) => {\r\n        if (this.checkCollistions(bullet, enemy)) {\r\n          enemy.takeHit();\r\n          if (enemy.lives <= 0) {\r\n            enemy.kill();\r\n            if (!this.gameOver) this.score += enemy.score;\r\n            if (this.winningScore < this.score) this.gameOver = true;\r\n          }\r\n          bullet.markForDelete = true;\r\n        }\r\n      });\r\n    });\r\n\r\n    this.enemies = this.enemies.filter((enemy) => !enemy.markedForDelete);\r\n    if (this.enemyTimer > this.enemyInterval && !this.gameOver) {\r\n      this.addEnemy();\r\n      this.enemyTimer = 0;\r\n    } else {\r\n      this.enemyTimer += deltaTime;\r\n    }\r\n\r\n    this.particles.forEach((particle) => particle.update());\r\n    this.particles = this.particles.filter((particle) => !particle.markedForDelete);\r\n    this.explosions.forEach((explosion) => explosion.update(deltaTime));\r\n    this.explosions = this.explosions.filter((explosion) => !explosion.markedForDelete);\r\n    this.background.postUpdate();\r\n  }\r\n\r\n  draw() {\r\n    this.background.draw();\r\n    this.player.draw();\r\n    this.bullets.forEach(bullet => bullet.draw());\r\n    this.enemies.forEach((enemy) => enemy.draw());\r\n    this.particles.forEach((particle) => particle.draw());\r\n    this.explosions.forEach((explosion) => explosion.draw());\r\n    this.ui.draw();\r\n    this.background.postDraw();\r\n  }\r\n\r\n  private addEnemy() {\r\n    const enemiesMap = [Lucky, Angler1, Angler2, HiveWhale];\r\n    const randomIndex = Math.floor(Math.random() * (enemiesMap.length));\r\n    const RandomEnemy = enemiesMap[randomIndex];\r\n    this.enemies.push(new RandomEnemy(this));\r\n  }\r\n\r\n  private checkCollistions(rect1: IRect, rect2: IRect): boolean {\r\n    return (\r\n      rect1.x < rect2.x + rect2.width &&\r\n      rect1.x + rect1.width > rect2.x &&\r\n      rect1.y < rect2.y + rect2.height &&\r\n      rect1.y + rect1.height > rect2.y\r\n    );\r\n  }\r\n}\r\n"],"names":["$44faa45cf852f7b3$export$936d0764594b6eb3","width","x","y","constructor","game","image","speedModifier","this","height","update","speed","draw","ctx","drawImage","$fe7fb059fad9cdb6$export$668799e4797757a8","layers","topLayers","image1","document","getElementById","image2","image3","image4","forEach","layer","postUpdate","postDraw","$df28da8dd7a55ba3$export$7a7fa4424cb20976","isMobile","navigator","userAgentData","mobile","controlKeys","shootKey","addMobileControl","addDesktopControl","canvas","requestFullscreen","err","console","log","window","addEventListener","e","changedTouches","clientY","yPlayer","player","keys","includes","push","index","indexOf","splice","index1","index2","key","shoot","debug","$e131cb4d064cd49a$export$3075603db8e6204c","updateSprite","frameX","maxFrame","frameY","strokeRect","fillStyle","font","fillText","lives","toString","$ad09701981030b4b$export$c36c68baa13912a5","Math","floor","random","sizeModifier","parseFloat","toFixed","size","speedX","speedY","gravity","markedForDelete","angle","angleVelocity","bounced","bottomBounceBorder","save","translate","rotate","restore","$295af0b69e4179c7$export$7999860126b75c7","timer","fps","interval","super","deltaTime","$dabad1e2188f782e$export$2e80534920b24a5","$c684c4e8b1ea6219$export$718daf669a03dd21","$fdd92d509316a8b9$export$eefe978c73a9a6","takeHit","particles","kill","explosions","RandomExplosion","length","i","score","touch","gameOver","$12b97201f0633e01$export$8ee8616438d9455","type","$636adbe3af08f4c0$export$97ce4c3bf2eb187d","$d1542f2f1b530154$export$d4d7714104fbe89c","onTurbo","$d0213047f2e8bbc1$export$f90411c24f6aebf8","markForDelete","$6d91ef257fa813c6$export$2616165974278734","maxSpeed","turbo","turboTimer","turboLimit","bottomBorder","topBorder","bullets","bullet","filter","ammo","bottomShoot","maxAmmo","$33b28264c1504bd0$export$4b08aed5f1ec6952","fontSize","fontFamily","color","shadowOffsetX","shadowOffsetY","shadowColor","fillRect","formattedTime","gameTime","textAlign","title","subtitle","winningScore","$7527a65e3e423cad$export$3bf9263b7cac56ad","$03920008c46a8e1e$export$e880d4dc7bdd5f58","i1","drone","enemies","$b4e14b6b8da86996$var$game","ammoTimer","ammoInterval","enemyInterval","enemyTimer","getContext","control","ui","background","enemy","checkCollistions","addEnemy","particle","explosion","enemiesMap","RandomEnemy","rect1","rect2","$b4e14b6b8da86996$var$lastUpdateTime","$b4e14b6b8da86996$var$animate","timeStamp","requestAnimationFrame"],"version":3,"file":"index.991efe8a.js.map"}